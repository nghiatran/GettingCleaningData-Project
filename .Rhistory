library(plyr)
install.packages('plyr')
library(plyr)
?str
?table
?factor
substring("statistics", 1:10, 1:10)
?substring
length(substring("statistics", 1:10, 1:10))
factor(c("a","b","c"))
?factor
letter
letters
factor(c("a","b","c"),letters)
methods(x)
attributes(x)
x.names
names(x)
?table
a <- letters[1:3]
table(a, sample(a))
t <- table(a, sample(a))
t
class(t)
?table
?sample
x <- 1:10
sample(x[x >8])
x
sample(x[x >8], replace = T)
?is.na
sum(c(T,F))
sum(c(T,T))
?xtab
library('xtab')
install.pacakges('xtab')
install.packages('xtab')
?xtabs
?table
?xtabs
esoph
class(esoph)
xtabs(cbind(ncases, ncontrols) ~ ., data = esoph)
cbind(ncases, ncontrols)
data(UCBAdmissions)
DF = as.data.frame(UCBAdmissions)
DF
xtabs(Freq ~ Gender + Admit, data=DF)
xtabs(Freq ~ Admit + Gender, data=DF)
xtabs(Freq ~ Gender + Admit + Dept, data=DF)
?object.size
fakeData = rnorm(1e5)
object.size(fakeData,unit = 'Mb')
object.size(fakeData,units = 'Mb')
?ifelse
x <- c(6:-4)
sqrt(x)  #- gives warning
sqrt(ifelse(x >= 0, x, NA))
?factor
install.packages('Hmisc')
library(Hmisc)
restData
x <- data.frame(a=c(1,2,3), b=c('d','e','f'))
x
x$c <- a > 2
x$c <- x$a > 2
x
x$c <- ifelse(x$a >2, T,F)
x
x$c <- ifelse(x$a >2, TRUE,FALSE)
x
x$c <- ifelse(x$a <2 , TRUE,FALSE)
x
?dcast
library(reshape)
library(reshape2)
install.packages(reshape2)
install.packages('reshape2')
library(reshape)
library(reshape2)
?dcast
head(InsectSprays)
?tapply
InsectSprays
?ave
ddply
?ddply
?dply
library(plyr)
?dply
?ddply
file.download("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv",destfile='data.csv',method='curl')
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv",destfile='data.csv',method='curl')
data <- read.csv('data.csv')
agricultureLocal = data[data$ACR == 3 & data&AGS == 6,]
data
View(data)
View(data)
View(data)
agricultureLocal = data[data$ACR == 3 & data&AGS == 6,]
agricultureLocal = data[data$ACR == 3 & data$AGS == 6,]
which(agricultureLocal)
agricultureLocal = data$ACR == 3 & data$AGS == 6
which(agricultureLocal)
library(jpeg)
install.packages('jpeg')
library(jpeg)
?jpeg
??jpeg
?system.file
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg",destfile='jeff.jpeg',method='curl')
img <- readJPEG(system.file("jeff.jpeg",package='jpeg'),native=T)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg",destfile='jeff.jpg',method='curl')
library(jpeg)
img <- readJPEG(system.file("jeff.jpeg",package='jpeg'),native=TRUE)
img <- readJPEG('jeff.jpg',native=TRUE)
class(img)
?quantile
x <- 1:10
quantile(x,c(0.2,0.7))
x
summary(x)
x
quantile(x,c(0.2,0.7))
quantile(x,c(0.3,0.7))
y <- matrix(1:12,ncol=3,nrow=4)
y
quantile(y,c(0.2,0.7))
quantile
methods(quantiles)
methods(quantile)
head(img)
class(img)
dim(img)
2/12
3/12
quantile(y,c(0.2))
quantile(y,c(0.1))
quantile(1:12,c(0.1))
quantile(1:12,c(0.5))
quantile(1:11,c(0.5))
quantile(1:11,c(0.1))
quantile(1:12,c(0.1))
2/12
quantile(1:10,c(0.1))
quantile(1:5,c(0.1))
quantile(1:12,c(0.1))
quantile(img,c(0.3,0.8))
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv',destfile='gdpdata.csv',method='curl')
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv',destfile='edudata.csv',method='curl')
gdp_data <- read.csv('gdpdata.csv')
edu_data <- read.csv('edudata.csv')
View(edu_data)
View(gdp_data)
View(edu_data)
View(edu_data)
View(gdp_data)
?merge
View(gdp_data)
View(gdp_data)
View(edu_data)
View(gdp_data)
View(edu_data)
result <- merge(gdp_data,edu_data,by.x='X',by.y='CountryCode')
result
View(result)
View(edu_data)
View(gdp_data)
View(result)
dim(result)
View(result)
View(gdp_data)
View(result)
result <- merge(gdp_data,edu_data,by.x='X',by.y='CountryCode',all=T)
View(result)
result <- merge(gdp_data,edu_data,by.x='X',by.y='CountryCode')
View(gdp_data)
View(edu_data)
View(gdp_data)
View(result)
View(gdp_data)
View(result)
unique(result$X)
length(unique(result$X))
levels(unique(result$X))
View(gdp_data)
View(gdp_data)
View(result)
result[which(X$Gross.domestic.product.2012)]
result[which(result$Gross.domestic.product.2012)]
result[!is.na(result$Gross.domestic.product.2012),]
result2 <- result[!is.na(result$Gross.domestic.product.2012),]
View(result)
result2 <- result[result$Gross.domestic.product.2012 != '',]
result[2,Gross.domestic.product.2012]
result[2,'Gross.domestic.product.2012']
result[2,]
result[2,c('Gross.domestic.product.2012')]
result[,'Gross.domestic.product.2012']
result[,c('Gross.domestic.product.2012')]
class(result[,c('Gross.domestic.product.2012')])
result[,c('Gross.domestic.product.2012')][2]
View(result2)
?sort
?order
?sort
View(result)
View(result2)
View(result)
View(gdp_data)
sort_result = result2[order(result2$X.3, na.last=T),]
View(sort_result)
result2$X.3
class(result2$X.3)
View(gdp_data)
?factor
sort_result = result2[order(result2$X.3, na.last=T),]
View(sort_result)
result2
result2$X3 <- as.numeric(levels(result2$X3))[result2$X3]
result2$X.3 <- as.numeric(levels(result2$X.3))[result2$X.3]
View(result2)
View(result)
result2 <- result[result$Gross.domestic.product.2012 != '',]
View(result2)
as.numeric(levels(result2$X.3))[result2$X.3]
result$X.3[2]
View(result2)
result2[2,c('X.3')]
class(result2[2,c('X.3')])
read.csv
?read.csv
library(sqldf)
?gsub
result$X.3 <- gsub(",","",result$X.3)
View(result2)
View(result2)
result2$X.3 <- gsub(",","",result2$X.3)
View(result2)
result2$X.3
class(result2$X.3)
as.numeric(result2$X.3)
result2$X.3 <- as.numeric(result2$X.3)
sort_result <- resulst2[order(result2$X.3, na.last = T)]
sort_result <- result2[order(result2$X.3, na.last = T)]
sort_result <- result2[order(result2$X.3, na.last = T),]
View(sort_result)
View(result2)
View(gdp_data)
result$X.2
View(gdp_data)
View(result)
View(edu_data)
View(result2)
tapply(result2,INDEX = result2$Income.Group,mean(result2$X.3))
tapply(result2$X.3,INDEX = result2$Income.Group,mean)
?tapply
View(result2)
View(gdp_data)
tapply(result2$Gross.domestic.product.2012,INDEX = result2$Income.Group,mean)
result2$Gross.domestic.product.2012
View(result2)
as.numeric(result2$Gross.domestic.product.2012)[result2$Gross.domestic.product.2012]
dim(as.numeric(result2$Gross.domestic.product.2012)[result2$Gross.domestic.product.2012])
as.numeric(result2$Gross.domestic.product.2012)[result2$Gross.domestic.product.2012]
length(as.numeric(result2$Gross.domestic.product.2012)[result2$Gross.domestic.product.2012])
result$Gross.domestic.product.2012 <- as.numeric(result2$Gross.domestic.product.2012)[result2$Gross.domestic.product.2012]
result2$Gross.domestic.product.2012 <- as.numeric(result2$Gross.domestic.product.2012)[result2$Gross.domestic.product.2012]
tapply(result2$Gross.domestic.product.2012,INDEX = result2$Income.Group,mean)
View(result2)
View(result)
View(gdp_data)
View(edu_data)
result <- merge(gdp_dat,edu_data,by.x = 'X',by.y='CountryCode')
result <- merge(gdp_data,edu_data,by.x = 'X',by.y='CountryCode')
View(result)
result <- result[result$Gross.domestic.product.2012 != '',]
View(result)
result$Gross.domestic.product.2012
sum(result2$Gross.domestic.product.2012)
is.na(result2$Gross.domestic.product.2012)
?mean
?tapply
result2 <- result
View(result)
View(result)
View(result2)
result2$Gross.domestic.product.2012
?factor
result2$Gross.domestic.product.2012 <- as.numeric(levels(result2$Gross.domestic.product.2012))[result2$Gross.domestic.product.2012]
tapply(result2$Gross.domestic.product.2012,INDEX = result2$Income.Group,mean,na.rm=T)
result2
quantile(result2$Gross.domestic.product.2012)
?cut
quantile(result2$Gross.domestic.product.2012)
class(quantile(result2$Gross.domestic.product.2012))
result2$rankGroup = cut(result2$Gross.domestic.product.2012, breaks = quantile(result2$Gross.domestic.product.2012))
View(result2)
?table
table(result2$rankGroup)
?quantile
library(Hmisc)
result2$rankGroup = cut2(result2$Gross.domestic.product.2012, g=5
)
View(result2)
View(result2)
?table
table(result2$Income.Group, result2$rankGroup)
View(result)
View(edu_data)
merged_data <- merge(gdp_data,edu_data,by.x='X',by.y='CountryCode')
View(merged_data)
?is.numeric
merged_data[is.numeric(merged_data$Gross.domestic.product.2012),]
is.numeric(merged_data$Gross.domestic.product.2012)
gdp_data <- gdp_data[!is.na(gdp_data$Gross.domestic.product.2012),]
View(gdp_data)
View(gdp_data)
View(edu_data)
View(gdp_data)
gdp_data <- gdp_data[5:194,]
View(gdp_data)
View(merged_data)
View(edu_data)
result <- merge(gdp_data,edu_data, by.x='X',by.y='CountryCode')
View(gdp_data)
View(gdp_data)
View(gdp_data)
View(result)
View(gdp_data)
?merge
View(gdp_data)
View(edu_data)
View(gdp_data)
result <- merge(gdp_data,edu_data, by.x='X',by.y='CountryCode',all=T)
View(result)
View(edu_data)
View(result)
result <- merge(gdp_data,edu_data, by.x='X',by.y='CountryCode')
View(result)
View(merged_data)
View(result)
View(gdp_data)
View(edu_data)
View(gdp_data)
gdp_data$rankGroup <- cut2(gdp_data$rankGroup,g=5)
gdp_data$rankGroup <- cut2(gdp_data$Gross.domestic.product.2012,g=5)
gdp_data$Gross.domestic.product.2012 <- as.numeric(gdp_data$Gross.domestic.product.2012)
gdp_data$rankGroup <- cut2(gdp_data$Gross.domestic.product.2012,g=5)
View(gdp_data)
merged_data <- merge(gdp_data,edu_data,by.x = 'X',by.y='CountryCode')
View(merged_data)
table(merged_data$rankGroup,mereged_data$Income.Group)
table(merged_data$rankGroup,merged_data$Income.Group)
table(merged_data$Income.Group,merged_data$rankGroup,)
table(merged_data$Income.Group,merged_data$rankGroup)
View(merged_data)
View(gdp_data)
View(edu_data)
merged_data <- merge(gdp_data,edu_data,by.x = 'X',by.y='CountryCode')
View(merged_data)
View(merged_data)
table(gdp_data$rankGroup)
table(merge_data$rankGroup)
table(merged_data$rankGroup)
table(merged_data$rankGroup,merged_data$Income.Group)
table(merged_data$Income.Group,merged_data$rankGroup)
View(result)
View(gdp_data)
View(gdp_data)
View(edu_data)
View(gdp_data)
gdp_data[gdp_data$Gross.domestic.product.2012 == 191,]
View(merged_data)
View(gdp_data)
table(merged_data$Income.Group,merged_data$rankGroup)
table(result$Income.Group,result$rankGroup)
result <- merge(gdp_data,edu_data,by.x='X',by.y='CountryCode')
View(result)
table(result$Income.Group,result$rankGroup)
table(gpd_data$rankGroup)
table(gdp_data$rankGroup)
table(result$rankGroup)
sum(result$Gross.domestic.product.2012 >= 3 & result$Gross.domestic.product.2012 <41 & result$Income.Group == 'Lower middle income')
sum(result$Gross.domestic.product.2012 >= 3 & result$Gross.domestic.product.2012 <41 & result$Income.Group == 'Lower middle income',)
result[result$Gross.domestic.product.2012 >= 3 & result$Gross.domestic.product.2012 <41 & result$Income.Group == 'Lower middle income',]
dim(result[result$Gross.domestic.product.2012 >= 3 & result$Gross.domestic.product.2012 <41 & result$Income.Group == 'Lower middle income',])
View(edu_data)
View(edu_data)
result[is.na(result$Income.Group)]
result[result$Income.Group == '']
View(result)
View(merged_data)
View(result)
View(result)
result_data
result <- merge(edu_data,gdp_data,by.x='CountryCode',by.y='X')
View(result)
View(gdp_data)
result$rankGroup
table(result$rankGroup)
result[result$Gross.domestic.product.2012 == 41]
result[result$Gross.domestic.product.2012 == 41,]
View(gdp_data)
raw_gdp_data <- read.csv('gdp_data.csv')
raw_gdp_data <- read.csv('gdpdata.csv')
View(raw_gdp_data)
View(gdp_data)
View(raw_gdp_data)
raw_gdp_data[1,]
raw_gdp_data[5,]
raw_gdp_data[5:194,]
gdp_data <- raw_gdp_data[5:194,]
View(gdp_data)
gdp_data$Gross.domestic.product.2012
x = as.numeric(gdp_data$Gross.domestic.product.2012)
max(x)
min(x)
x <- as.numeric(levels(gdp_data$Gross.domestic.product.2012))[gdp_data$Gross.domestic.product.2012]
gdp_data$Gross.domestic.product.2012 <- x
View(gdp_data)
gdp_data$rankGroup <- cuts(gdp_data$Gross.domestic.product.2012,g=5)
gdp_data$rankGroup <- cut2(gdp_data$Gross.domestic.product.2012,g=5)
View(gdp_data)
result <- merge(gdp_data,edu_data,by.x='X',by.y= 'CountryCode')
table(result$rankGroup,result$Income.Group)
table(result$Income.Group,result$rankGroup)
setwd('Documents/study/online courses/Getting and cleaning data/')
setwd('project')
?read.line
?readline
con = file('UCI HAR Dataset/train/X_train.txt')
line = readLines(con)
class(line)
length(line)
line[1]
class(line[1])
?strsplit
strsplit("a.b.c", ".")
x <- c(as = "asfef", qu = "qwerty", "yuiop[", "b", "stuff.blah.yech")
strsplit(x, "e")
x
y = c("ab cd ef gh ij")
strsplit(y,' ')
class(strsplit(y,' '))
z = strsplit(y,' ')
z[[1]]
class(z[[1]])
z = strsplit(y," ")
z
z[[2]]
z[[1]]
z[[1]][1]
z[[1]][2]
class(z[[1]])
txt <- c('a','b','c')
txt
length(txt)
features <- strsplit(line[1])
features <- strsplit(line[1], ' ')
features
features <- strsplit(line[1], ' ')
length(features)
class(features)
features[1]
class(features[1])
class(features[[1]])
features[[1]]
length( features[[1]])
txt <- c('ab', 'cd', 'ef')
txt
length(txt)
?grep
grep('ab','cdfabce')
strsplit("abc   def   ghi")
?strsplit
strsplit("abc   def   ghi","/s+")
strsplit("abc   def   ghi","(/s)+")
strsplit("abc   def   ghi","\s+")
strsplit("abc   def   ghi","(\s)+")
strsplit("abc   def   ghi","/\s+/")
strsplit("abc   def   ghi","\s")
strsplit("abc   def   ghi","\\s")
strsplit("abc   def   ghi","\\s+")
strsplit(line[1],"\\s+")
length(strsplit(line[1],"\\s+"))
strsplit(line[[1]],"\\s+")
length(strsplit(line[[1]],"\\s+"))
x = strsplit(line[[1]],"\\s+")
x[1]
attribtues(x)
methods(x)
x
class(x)
x[[1]]
class(x[[1]])
length(x[[1]])
line
line[1]
length(line[1])
length(line[[1])
length(line[[1]])
?trim
line[2]
?readLines
class(line)
length(line)
class(line[1])
?write.table
d = data.frame(x=c(1,2,4),y=c('ab', 'cd', 'ef'))
d
d = data.frame(x=c(1,2,4),y=c('ab', 'cd', 'ef'))
